# Workflow handling CI/CD of the browsing microservice
name: (Browsing ms) Build & Push image

on:
  push: # runs on any push to the main branch
    branches: [ main ]
    paths:
      - 'Microservices/browsing/**'
      - '!Microservices/browsing/.idea/**'
      - '!Microservices/browsing/README.md'
  pull_request: # runs on any pull request with changes on the same files
    branches: [ main ]
    paths:
      - 'Microservices/browsing/**'
      - '!Microservices/browsing/.idea/**'
      - '!Microservices/browsing/README.md'
  workflow_dispatch:

defaults:
  run:
    working-directory: Microservices/browsing

jobs:
  build_push:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch main or PR-merge-branch on runner
        uses: actions/checkout@v2.3.4
      
      - name: Setup node environment
        uses: actions/setup-node@v2
        with:
          node-version: '15'
      
      #- name: Install dependencies
      #  run: |
      #    rm package-lock.json
      #    npm install
      
      - name: Login Docker
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Setup Caching for Docker
        if: github.event_name != 'pull_request'
        uses: actions/cache@v2
        with:
          path: /tmp/ms/browsing/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Setup Docker Buildx
        if: github.event_name != 'pull_request'
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Setup image tags
        if: github.event_name != 'pull_request'
        run : |
          echo "IMAGE_TAG=$(curl -m 20 'http://snf-880282.vm.okeanos.grnet.gr:60080/docker/ms-browsing-latest-tag.txt')" >> $GITHUB_ENV
      
      - name: Build and push image
        if: github.event_name != 'pull_request'
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ${{ github.workspace }}/Microservices/browsing
          file: ${{ github.workspace }}/Microservices/browsing/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/ms-browsing:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/ms-browsing:latest
          cache-from: type=local,src=/tmp/ms/browsing/.buildx-cache
          cache-to: type=local,dest=/tmp/ms/browsing/.buildx-cache-new

      - name: Pull & restart containers
        if: github.event_name != 'pull_request'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOSTNAME }}
          username: temp
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          script: cd ~ && update-kube.sh browsing
      
      - name: Move cache
        if: github.event_name != 'pull_request'
        run: |
          rm -rf /tmp/ms/browsing/.buildx-cache
          mv /tmp/ms/browsing/.buildx-cache-new /tmp/ms/browsing/.buildx-cache
