name: (Service-Bus) Build & Push image

on:
  push:
    branches: [ main ]
    paths:
      - 'SOA/Bus/**'
      - '!SOA/Bus/.idea/**'
      - '!SOA/Bus/README.md'
  pull_request:
    branches: [ main ]
    paths:
      - 'SOA/Bus/**'
      - '!SOA/Bus/.idea/**'
      - '!SOA/Bus/README.md'
  workflow_dispatch:

defaults:
  run:
    working-directory: SOA/Bus
  
jobs:
  build_push:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch main or PR-merge-branch on runner
        uses: actions/checkout@v2.3.4
      
      - name: Setup node environment
        run: npm install
      
      - name: Login Docker
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
      - name: Setup caching for Docker
        if: github.event_name != 'pull_request'
        uses: actions/cache@v2
        with:
          path: /tmp/bus/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Setup Docker Buildx
        if: github.event_name != 'pull_request'
        id: buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Setup image tags
        if: github.event_name != 'pull_request'
        run: |
          echo "IMAGE_TAG=$(curl -m 20 'http://snf-880282.vm.okeanos.grnet.gr/docker/soa-bus-latest-tag.txt')" >> $GITHUB_ENV
      
      - name: Build and push image
        if: github.event_name != 'pull_request'
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ${{ github.workspace }}/SOA/Bus
          file: ${{ github.workspace }}/SOA/Bus/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/soa-servicebus:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/soa-servicebus:latest
          cache-from: type=local,src=/tmp/bus/.buildx-cache
          cache-to: type=local,dest=/tmp/bus/.buildx-cache-new

      - name: Pull & restart containers
        if: github.event_name != 'pull_request'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOSTNAME }}
          username: temp
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          script: kubectl rollout restart deployment/service-bus

      - name: Move cache
        if: github.event_name != 'pull_request'
        run: |
          rm -rf /tmp/bus/.buildx-cache
          mv /tmp/bus/.buildx-cache-new /tmp/bus/.buildx-cache
